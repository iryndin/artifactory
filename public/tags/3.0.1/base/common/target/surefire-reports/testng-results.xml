<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="125" passed="125">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="1732" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:30Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1732" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:30Z">
      <class name="org.artifactory.maven.MavenServiceImplTest">
        <test-method status="PASS" signature="generateMavenSettings()[pri:0, instance:org.artifactory.maven.MavenServiceImplTest@2d7f2fae]" name="generateMavenSettings" duration-ms="26" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateMavenSettings -->
      </class> <!-- org.artifactory.maven.MavenServiceImplTest -->
      <class name="org.artifactory.repo.RepoDetailsTest">
        <test-method status="PASS" signature="testDefaultConstructor()[pri:0, instance:org.artifactory.repo.RepoDetailsTest@6abbfce0]" name="testDefaultConstructor" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultConstructor -->
        <test-method status="PASS" signature="testLocalOrVirtualConstructor()[pri:0, instance:org.artifactory.repo.RepoDetailsTest@6abbfce0]" name="testLocalOrVirtualConstructor" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalOrVirtualConstructor -->
        <test-method status="PASS" signature="testRemoteConstructor()[pri:0, instance:org.artifactory.repo.RepoDetailsTest@6abbfce0]" name="testRemoteConstructor" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoteConstructor -->
        <test-method status="PASS" signature="testSetters()[pri:0, instance:org.artifactory.repo.RepoDetailsTest@6abbfce0]" name="testSetters" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetters -->
      </class> <!-- org.artifactory.repo.RepoDetailsTest -->
      <class name="org.artifactory.common.IvyNamingTest">
        <test-method status="PASS" signature="ivyFileName()[pri:0, instance:org.artifactory.common.IvyNamingTest@17e2c93c]" name="ivyFileName" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ivyFileName -->
      </class> <!-- org.artifactory.common.IvyNamingTest -->
      <class name="org.artifactory.maven.PomTargetPathValidatorTest">
        <test-method status="PASS" signature="validatePluginPom()[pri:0, instance:org.artifactory.maven.PomTargetPathValidatorTest@a01ae18]" name="validatePluginPom" duration-ms="17" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePluginPom -->
        <test-method status="PASS" signature="validatePomTargetInValidPath()[pri:0, instance:org.artifactory.maven.PomTargetPathValidatorTest@a01ae18]" name="validatePomTargetInValidPath" duration-ms="5" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="org.artifactory.api.repo.exception.maven.BadPomException">
            <message>
              <![CDATA[The target deployment path 'blab/bla/1.0.0-alpha2' does not match the POM's expected path prefix 'yourpit/yourpit/1.0.0-alpha2'. Please verify your POM content for correctness and make sure the source path is a valid Maven repository root path.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.artifactory.api.repo.exception.maven.BadPomException: The target deployment path 'blab/bla/1.0.0-alpha2' does not match the POM's expected path prefix 'yourpit/yourpit/1.0.0-alpha2'. Please verify your POM content for correctness and make sure the source path is a valid Maven repository root path.
	at org.artifactory.maven.PomTargetPathValidator.validate(PomTargetPathValidator.java:86)
	at org.artifactory.maven.PomTargetPathValidatorTest.validatePomTargetInValidPath(PomTargetPathValidatorTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- org.artifactory.api.repo.exception.maven.BadPomException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePomTargetInValidPath -->
        <test-method status="PASS" signature="validatePomTargetValidPath()[pri:0, instance:org.artifactory.maven.PomTargetPathValidatorTest@a01ae18]" name="validatePomTargetValidPath" duration-ms="3" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePomTargetValidPath -->
      </class> <!-- org.artifactory.maven.PomTargetPathValidatorTest -->
      <class name="org.artifactory.util.StringInputStreamTest">
        <test-method status="PASS" signature="readMultiLineString()[pri:0, instance:org.artifactory.util.StringInputStreamTest@66f95a5a]" name="readMultiLineString" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMultiLineString -->
        <test-method status="PASS" signature="readOneLineString()[pri:0, instance:org.artifactory.util.StringInputStreamTest@66f95a5a]" name="readOneLineString" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOneLineString -->
      </class> <!-- org.artifactory.util.StringInputStreamTest -->
      <class name="org.artifactory.security.UserConfigurationImplTest">
        <test-method status="PASS" signature="testDefaultConstructor()[pri:0, instance:org.artifactory.security.UserConfigurationImplTest@79135fd7]" name="testDefaultConstructor" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultConstructor -->
        <test-method status="PASS" signature="testSetters()[pri:0, instance:org.artifactory.security.UserConfigurationImplTest@79135fd7]" name="testSetters" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetters -->
      </class> <!-- org.artifactory.security.UserConfigurationImplTest -->
      <class name="org.artifactory.maven.MavenModelUtilsTest">
        <test-method status="PASS" signature="readMimeTypes()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="readMimeTypes" is-config="true" duration-ms="22" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMimeTypes -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="buildSnapshotMavenMetadataWithM3Metadata()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="buildSnapshotMavenMetadataWithM3Metadata" duration-ms="16" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildSnapshotMavenMetadataWithM3Metadata -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="buildSnapshotMavenMetadataWithoutM3Metadata()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="buildSnapshotMavenMetadataWithoutM3Metadata" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildSnapshotMavenMetadataWithoutM3Metadata -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="getArtifactInfoJar()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="getArtifactInfoJar" duration-ms="16" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArtifactInfoJar -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="getArtifactInfoPom()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="getArtifactInfoPom" duration-ms="37" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArtifactInfoPom -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="inputStreamToMavenMetadata()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="inputStreamToMavenMetadata" duration-ms="6" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputStreamToMavenMetadata -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="mavenMetadataToString()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="mavenMetadataToString" duration-ms="7" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mavenMetadataToString -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="mavenModelToArtifactInfo()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="mavenModelToArtifactInfo" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mavenModelToArtifactInfo -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="mavenModelToArtifactInfoGroupIdInParent()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="mavenModelToArtifactInfoGroupIdInParent" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mavenModelToArtifactInfoGroupIdInParent -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="nonValidMetadataString()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="nonValidMetadataString" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Failed to parse metadata: start tag unexpected character < (position: START_DOCUMENT seen <metadatablabla\n<... @2:2) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Failed to parse metadata: start tag unexpected character < (position: START_DOCUMENT seen <metadatablabla\n<... @2:2) 
	at org.artifactory.maven.MavenModelUtils.toMavenMetadata(MavenModelUtils.java:151)
	at org.artifactory.maven.MavenModelUtils.toMavenMetadata(MavenModelUtils.java:125)
	at org.artifactory.maven.MavenModelUtilsTest.nonValidMetadataString(MavenModelUtilsTest.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonValidMetadataString -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="readNewMaven3MetadataFormat()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="readNewMaven3MetadataFormat" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readNewMaven3MetadataFormat -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="testToMaven1Path()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="testToMaven1Path" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMaven1Path -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testToMaven1PathMd5()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="testToMaven1PathMd5" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMaven1PathMd5 -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="testToMaven1PathPom()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="testToMaven1PathPom" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMaven1PathPom -->
        <test-method status="PASS" signature="testToMaven1PathSha1()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="testToMaven1PathSha1" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMaven1PathSha1 -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="validStringToMetadata()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="validStringToMetadata" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validStringToMetadata -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="validStringToMetadataNoVersioning()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="validStringToMetadataNoVersioning" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validStringToMetadataNoVersioning -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenModelUtilsTest@4e318ff7]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
      </class> <!-- org.artifactory.maven.MavenModelUtilsTest -->
      <class name="org.artifactory.storage.StorageUnitTest">
        <test-method status="PASS" signature="bytesToReadableFormat()[pri:0, instance:org.artifactory.storage.StorageUnitTest@11f54254]" name="bytesToReadableFormat" duration-ms="3" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bytesToReadableFormat -->
        <test-method status="PASS" signature="convertBytesToGb()[pri:0, instance:org.artifactory.storage.StorageUnitTest@11f54254]" name="convertBytesToGb" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertBytesToGb -->
        <test-method status="PASS" signature="readableFormatToBytes()[pri:0, instance:org.artifactory.storage.StorageUnitTest@11f54254]" name="readableFormatToBytes" duration-ms="2" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readableFormatToBytes -->
        <test-method status="PASS" signature="convertBytesToMb()[pri:0, instance:org.artifactory.storage.StorageUnitTest@11f54254]" name="convertBytesToMb" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertBytesToMb -->
        <test-method status="PASS" signature="revertGbToBytes()[pri:0, instance:org.artifactory.storage.StorageUnitTest@11f54254]" name="revertGbToBytes" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revertGbToBytes -->
        <test-method status="PASS" signature="revertMbToBytes()[pri:0, instance:org.artifactory.storage.StorageUnitTest@11f54254]" name="revertMbToBytes" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revertMbToBytes -->
      </class> <!-- org.artifactory.storage.StorageUnitTest -->
      <class name="org.artifactory.security.CustomizedEncryptedPasswordPrefixTest">
        <test-method status="PASS" signature="readMimeTypes()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="readMimeTypes" is-config="true" duration-ms="24" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMimeTypes -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testCustomizedEncryptedPasswordPrefixSurroundingCharacters()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="testCustomizedEncryptedPasswordPrefixSurroundingCharacters" duration-ms="2" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomizedEncryptedPasswordPrefixSurroundingCharacters -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testCustomizedEncryptedPasswordPrefixWithInvalidSurroundingCharacters()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="testCustomizedEncryptedPasswordPrefixWithInvalidSurroundingCharacters" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomizedEncryptedPasswordPrefixWithInvalidSurroundingCharacters -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CustomizedEncryptedPasswordPrefixTest@244071d]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
      </class> <!-- org.artifactory.security.CustomizedEncryptedPasswordPrefixTest -->
      <class name="org.artifactory.security.SecurityEntityListItemTest">
        <test-method status="PASS" signature="testDefaultValues()[pri:0, instance:org.artifactory.security.SecurityEntityListItemTest@7cd5a201]" name="testDefaultValues" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultValues -->
        <test-method status="PASS" signature="testSetters()[pri:0, instance:org.artifactory.security.SecurityEntityListItemTest@7cd5a201]" name="testSetters" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetters -->
      </class> <!-- org.artifactory.security.SecurityEntityListItemTest -->
      <class name="org.artifactory.build.BuildInfoIOTest">
        <test-method status="PASS" signature="generateFromObject()[pri:0, instance:org.artifactory.build.BuildInfoIOTest@3a57e86]" name="generateFromObject" duration-ms="355" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateFromObject -->
      </class> <!-- org.artifactory.build.BuildInfoIOTest -->
      <class name="org.artifactory.security.PermissionTargetConfigurationImplTest">
        <test-method status="PASS" signature="testDefaultValues()[pri:0, instance:org.artifactory.security.PermissionTargetConfigurationImplTest@7636d59a]" name="testDefaultValues" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultValues -->
        <test-method status="PASS" signature="testSetters()[pri:0, instance:org.artifactory.security.PermissionTargetConfigurationImplTest@7636d59a]" name="testSetters" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetters -->
      </class> <!-- org.artifactory.security.PermissionTargetConfigurationImplTest -->
      <class name="org.artifactory.util.TimeUnitFormatTest">
        <test-method status="PASS" signature="stillNanos()[pri:0, instance:org.artifactory.util.TimeUnitFormatTest@52ba2221]" name="stillNanos" duration-ms="2" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stillNanos -->
        <test-method status="PASS" signature="toMillis()[pri:0, instance:org.artifactory.util.TimeUnitFormatTest@52ba2221]" name="toMillis" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toMillis -->
        <test-method status="PASS" signature="toMinutes()[pri:0, instance:org.artifactory.util.TimeUnitFormatTest@52ba2221]" name="toMinutes" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toMinutes -->
        <test-method status="PASS" signature="toSecondsWithMillisecondTimeUnit()[pri:0, instance:org.artifactory.util.TimeUnitFormatTest@52ba2221]" name="toSecondsWithMillisecondTimeUnit" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toSecondsWithMillisecondTimeUnit -->
        <test-method status="PASS" signature="toSeconds()[pri:0, instance:org.artifactory.util.TimeUnitFormatTest@52ba2221]" name="toSeconds" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toSeconds -->
      </class> <!-- org.artifactory.util.TimeUnitFormatTest -->
      <class name="org.artifactory.maven.MavenPomBuilderTest">
        <test-method status="PASS" signature="buildSimple()[pri:0, instance:org.artifactory.maven.MavenPomBuilderTest@66159148]" name="buildSimple" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildSimple -->
      </class> <!-- org.artifactory.maven.MavenPomBuilderTest -->
      <class name="org.artifactory.security.PrincipalConfigurationImplTest">
        <test-method status="PASS" signature="testDefaultValues()[pri:0, instance:org.artifactory.security.PrincipalConfigurationImplTest@7c9aff86]" name="testDefaultValues" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultValues -->
        <test-method status="PASS" signature="testSetters()[pri:0, instance:org.artifactory.security.PrincipalConfigurationImplTest@7c9aff86]" name="testSetters" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetters -->
      </class> <!-- org.artifactory.security.PrincipalConfigurationImplTest -->
      <class name="org.artifactory.maven.MavenNamingTest">
        <test-method status="PASS" signature="readMimeTypes()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="readMimeTypes" is-config="true" duration-ms="22" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMimeTypes -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithAlphaNumberArtifactId(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithAlphaNumberArtifactId" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithAlphaNumberArtifactId" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[artifactId1231]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithAlphaNumberArtifactId -->
        <test-method status="PASS" signature="artifactWithAlphaNumberArtifactId(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithAlphaNumberArtifactId" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithAlphaNumberArtifactId" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1213artifactId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithAlphaNumberArtifactId -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithAlphaNumberArtifactId(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithAlphaNumberArtifactId" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithAlphaNumberArtifactId" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1213artifactId1231]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithAlphaNumberArtifactId -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithAlphaNumericClassifier(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithAlphaNumericClassifier" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithAlphaNumericClassifier" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[classifier123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithAlphaNumericClassifier -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithAlphaNumericClassifier(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithAlphaNumericClassifier" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithAlphaNumericClassifier" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123classifier]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithAlphaNumericClassifier -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithAlphaNumericVersion(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithAlphaNumericVersion" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithAlphaNumericVersion" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0alpha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithAlphaNumericVersion -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithClassifier()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithClassifier" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithClassifier -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithLongExtension()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithLongExtension" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithLongExtension -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithMultipleArtifactIds(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithMultipleArtifactIds" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithMultipleArtifactIds" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[artifactId-artifactId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithMultipleArtifactIds -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithMultipleArtifactIds(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithMultipleArtifactIds" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithMultipleArtifactIds" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[artifactId2-artifactId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithMultipleArtifactIds -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithMultipleArtifactIds(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithMultipleArtifactIds" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithMultipleArtifactIds" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[artifactId-artifactId2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithMultipleArtifactIds -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithMultipleArtifactIds(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithMultipleArtifactIds" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithMultipleArtifactIds" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[artifactId2-artifactId2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithMultipleArtifactIds -->
        <test-method status="PASS" signature="artifactWithMultipleArtifactIds(java.lang.String)[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithMultipleArtifactIds" duration-ms="0" started-at="2013-05-13T13:11:30Z" data-provider="artifactWithMultipleArtifactIds" finished-at="2013-05-13T13:11:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2artifactId-artifactId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithMultipleArtifactIds -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithNoClassifier()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithNoClassifier" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithNoClassifier -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithNumericArtifactId()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithNumericArtifactId" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithNumericArtifactId -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithNumericClassifier()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithNumericClassifier" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithNumericClassifier -->
        <test-method status="PASS" signature="artifactWithPath()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithPath" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithPath -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="artifactWithShortExtension()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="artifactWithShortExtension" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artifactWithShortExtension -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="getArtifactInfo()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="getArtifactInfo" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArtifactInfo -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="isMavenMetadataChecksum()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="isMavenMetadataChecksum" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isMavenMetadataChecksum -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="isMetadata()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="isMetadata" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isMetadata -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="isNonUniqueSnapshotVersion()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="isNonUniqueSnapshotVersion" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNonUniqueSnapshotVersion -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="isSnapshotMavenMetadata()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="isSnapshotMavenMetadata" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSnapshotMavenMetadata -->
        <test-method status="PASS" signature="pathWithCompositeFileExtension()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="pathWithCompositeFileExtension" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pathWithCompositeFileExtension -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="testIsClientOrServerPom()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="testIsClientOrServerPom" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsClientOrServerPom -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testIsNonUniqueSnapshotFilePath()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="testIsNonUniqueSnapshotFilePath" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNonUniqueSnapshotFilePath -->
        <test-method status="PASS" signature="testIsVersionUniqueSnapshot()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="testIsVersionUniqueSnapshot" duration-ms="2" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsVersionUniqueSnapshot -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="testUniqueSnapshotVersionBuildNumber()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="testUniqueSnapshotVersionBuildNumber" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUniqueSnapshotVersionBuildNumber -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testUniqueVersionTimestamp()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="testUniqueVersionTimestamp" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUniqueVersionTimestamp -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="testUniqueVersionTimestampAndBuildNumber()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="testUniqueVersionTimestampAndBuildNumber" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUniqueVersionTimestampAndBuildNumber -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="uniqueSnapshotVersionBaseVersion()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="uniqueSnapshotVersionBaseVersion" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueSnapshotVersionBaseVersion -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.maven.MavenNamingTest@27c00ec8]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
      </class> <!-- org.artifactory.maven.MavenNamingTest -->
      <class name="org.artifactory.util.PathValidatorTest">
        <test-method status="PASS" signature="illegalBackslash()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalBackslash" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '\' is not a valid name character: back\slash.zors]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '\' is not a valid name character: back\slash.zors
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalBackslash(PathValidatorTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalBackslash -->
        <test-method status="PASS" signature="illegalCarretLeft()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalCarretLeft" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '<' is not a valid name character: hibla<sdf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '<' is not a valid name character: hibla<sdf
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalCarretLeft(PathValidatorTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalCarretLeft -->
        <test-method status="PASS" signature="illegalCarretRight()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalCarretRight" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '>' is not a valid name character: path/to>file.jar]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '>' is not a valid name character: path/to>file.jar
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalCarretRight(PathValidatorTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalCarretRight -->
        <test-method status="PASS" signature="illegalColon()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalColon" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. ':' is not a valid name character: c/olo:n/repo/path]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. ':' is not a valid name character: c/olo:n/repo/path
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalColon(PathValidatorTest.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalColon -->
        <test-method status="PASS" signature="illegalPipe()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalPipe" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '|' is not a valid name character: sup|r|mario]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '|' is not a valid name character: sup|r|mario
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalPipe(PathValidatorTest.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalPipe -->
        <test-method status="PASS" signature="illegalQuestionMark()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalQuestionMark" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '?' is not a valid name character: riddle/me_this?.tar]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '?' is not a valid name character: riddle/me_this?.tar
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalQuestionMark(PathValidatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalQuestionMark -->
        <test-method status="PASS" signature="illegalQuotationMark()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalQuotationMark" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '"' is not a valid name character: make"believe.hello]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '"' is not a valid name character: make"believe.hello
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalQuotationMark(PathValidatorTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalQuotationMark -->
        <test-method status="PASS" signature="invalidAllSpaces()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidAllSpaces" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path cannot be blank:        ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path cannot be blank:        
	at org.artifactory.util.PathValidator.validate(PathValidator.java:51)
	at org.artifactory.util.PathValidatorTest.invalidAllSpaces(PathValidatorTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidAllSpaces -->
        <test-method status="PASS" signature="illegalStar()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="illegalStar" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. '*' is not a valid name character: the/universe/has/lots/of/*]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. '*' is not a valid name character: the/universe/has/lots/of/*
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.illegalStar(PathValidatorTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalStar -->
        <test-method status="PASS" signature="invalidDot()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidDot" duration-ms="3" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path element cannot end with a dot: blabla/.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path element cannot end with a dot: blabla/.
	at org.artifactory.util.PathValidator.validate(PathValidator.java:74)
	at org.artifactory.util.PathValidatorTest.invalidDot(PathValidatorTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDot -->
        <test-method status="PASS" signature="invalidDotDot()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidDotDot" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path element cannot end with a dot: dot/../dot/file.jar]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path element cannot end with a dot: dot/../dot/file.jar
	at org.artifactory.util.PathValidator.validate(PathValidator.java:74)
	at org.artifactory.util.PathValidatorTest.invalidDotDot(PathValidatorTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDotDot -->
        <test-method status="PASS" signature="invalidSingleAmpersand()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSingleAmpersand" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path cannot have single ampersand: &]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path cannot have single ampersand: &
	at org.artifactory.util.PathValidator.validate(PathValidator.java:76)
	at org.artifactory.util.PathValidatorTest.invalidSingleAmpersand(PathValidatorTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSingleAmpersand -->
        <test-method status="PASS" signature="invalidSingleColon()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSingleColon" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Invalid path. ':' is not a valid name character: :]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Invalid path. ':' is not a valid name character: :
	at org.artifactory.util.PathValidator.validate(PathValidator.java:109)
	at org.artifactory.util.PathValidatorTest.invalidSingleColon(PathValidatorTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSingleColon -->
        <test-method status="PASS" signature="invalidSingleDotDot()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSingleDotDot" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path element cannot end with a dot: ..]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path element cannot end with a dot: ..
	at org.artifactory.util.PathValidator.validate(PathValidator.java:74)
	at org.artifactory.util.PathValidatorTest.invalidSingleDotDot(PathValidatorTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSingleDotDot -->
        <test-method status="PASS" signature="invalidSingleDot()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSingleDot" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path element cannot end with a dot: .]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path element cannot end with a dot: .
	at org.artifactory.util.PathValidator.validate(PathValidator.java:74)
	at org.artifactory.util.PathValidatorTest.invalidSingleDot(PathValidatorTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSingleDot -->
        <test-method status="PASS" signature="invalidSingleSlash()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSingleSlash" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path cannot contain double slash '//': /]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path cannot contain double slash '//': /
	at org.artifactory.util.PathValidator.validate(PathValidator.java:70)
	at org.artifactory.util.PathValidatorTest.invalidSingleSlash(PathValidatorTest.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSingleSlash -->
        <test-method status="PASS" signature="invalidSingleTokenAmpersand()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSingleTokenAmpersand" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path cannot have single ampersand: bbb/&]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path cannot have single ampersand: bbb/&
	at org.artifactory.util.PathValidator.validate(PathValidator.java:76)
	at org.artifactory.util.PathValidatorTest.invalidSingleTokenAmpersand(PathValidatorTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSingleTokenAmpersand -->
        <test-method status="PASS" signature="invalidSpaceAfterSlash()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSpaceAfterSlash" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path cannot have a space after a slash: blabla/hello/      ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path cannot have a space after a slash: blabla/hello/      
	at org.artifactory.util.PathValidator.validate(PathValidator.java:96)
	at org.artifactory.util.PathValidatorTest.invalidSpaceAfterSlash(PathValidatorTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSpaceAfterSlash -->
        <test-method status="PASS" signature="invalidSpaceBeforeSlash()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="invalidSpaceBeforeSlash" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Path cannot have a slash after a space:  shsh/gaga /hdt]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Path cannot have a slash after a space:  shsh/gaga /hdt
	at org.artifactory.util.PathValidator.validate(PathValidator.java:72)
	at org.artifactory.util.PathValidatorTest.invalidSpaceBeforeSlash(PathValidatorTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSpaceBeforeSlash -->
        <test-method status="PASS" signature="validPaths()[pri:0, instance:org.artifactory.util.PathValidatorTest@402f0214]" name="validPaths" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPaths -->
      </class> <!-- org.artifactory.util.PathValidatorTest -->
      <class name="org.artifactory.security.GroupConfigurationImplTest">
        <test-method status="PASS" signature="testDefaultConstructor()[pri:0, instance:org.artifactory.security.GroupConfigurationImplTest@566749c5]" name="testDefaultConstructor" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultConstructor -->
        <test-method status="PASS" signature="testSetters()[pri:0, instance:org.artifactory.security.GroupConfigurationImplTest@566749c5]" name="testSetters" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetters -->
      </class> <!-- org.artifactory.security.GroupConfigurationImplTest -->
      <class name="org.artifactory.repo.RepoDetailsTypeTest">
        <test-method status="PASS" signature="testDisplayName()[pri:0, instance:org.artifactory.repo.RepoDetailsTypeTest@744caec9]" name="testDisplayName" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayName -->
      </class> <!-- org.artifactory.repo.RepoDetailsTypeTest -->
      <class name="org.artifactory.security.CryptoHelperTest">
        <test-method status="PASS" signature="readMimeTypes()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="readMimeTypes" is-config="true" duration-ms="291" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMimeTypes -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="27" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="availableAlgorithms()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="availableAlgorithms" duration-ms="89" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- availableAlgorithms -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="encrypt()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="encrypt" duration-ms="251" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encrypt -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="encryptDecrypt()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="encryptDecrypt" duration-ms="48" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encryptDecrypt -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="encryptDecryptSymmetric()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="encryptDecryptSymmetric" duration-ms="22" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encryptDecryptSymmetric -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="encryptSymmetric()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="encryptSymmetric" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encryptSymmetric -->
        <test-method status="PASS" signature="escapeEncryptedPassword()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="escapeEncryptedPassword" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escapeEncryptedPassword -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="generateKeyPair()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="generateKeyPair" duration-ms="33" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateKeyPair -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="generateSecretKey()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="generateSecretKey" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateSecretKey -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="isEncrypted()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="isEncrypted" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEncrypted -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="restoreKeysFromBase64()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="restoreKeysFromBase64" duration-ms="39" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreKeysFromBase64 -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="restorePrivateKey()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="restorePrivateKey" duration-ms="39" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restorePrivateKey -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="toBase64String()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="toBase64String" duration-ms="24" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toBase64String -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.security.CryptoHelperTest@4d5698f]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
      </class> <!-- org.artifactory.security.CryptoHelperTest -->
      <class name="org.artifactory.addon.AddonTypeTest">
        <test-method status="PASS" signature="testAddonsDisplayOrdinal()[pri:0, instance:org.artifactory.addon.AddonTypeTest@23fdf653]" name="testAddonsDisplayOrdinal" duration-ms="15" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddonsDisplayOrdinal -->
      </class> <!-- org.artifactory.addon.AddonTypeTest -->
      <class name="org.artifactory.request.ArtifactoryResponseTest">
        <test-method status="PASS" signature="sendErroChangesState()[pri:0, instance:org.artifactory.request.ArtifactoryResponseTest@5b5e4f78]" name="sendErroChangesState" duration-ms="18" started-at="2013-05-13T13:11:29Z" finished-at="2013-05-13T13:11:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendErroChangesState -->
      </class> <!-- org.artifactory.request.ArtifactoryResponseTest -->
      <class name="org.artifactory.util.ZipUtilsTest">
        <test-method status="PASS" signature="readMimeTypes()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="readMimeTypes" is-config="true" duration-ms="23" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readMimeTypes -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="setup" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="locateExistingEntry()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="locateExistingEntry" duration-ms="8" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- locateExistingEntry -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="locateMissingEntry()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="locateMissingEntry" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- locateMissingEntry -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testExtractTarFile()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="testExtractTarFile" duration-ms="35" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractTarFile -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="testExtractTarGzFile()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="testExtractTarGzFile" duration-ms="4" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractTarGzFile -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="testExtractTgzFile()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="testExtractTgzFile" duration-ms="3" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractTgzFile -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="testExtractZipFile()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="testExtractZipFile" duration-ms="26" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractZipFile -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
        <test-method status="PASS" signature="openStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="openStream" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openStream -->
        <test-method status="PASS" signature="bindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="bindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindArtifactoryHome -->
        <test-method status="PASS" signature="testUnsupportedArchive()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="testUnsupportedArchive" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Unsupported archive extension: 'ar']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Unsupported archive extension: 'ar'
	at org.artifactory.util.ZipUtils.verifySupportedExtension(ZipUtils.java:213)
	at org.artifactory.util.ZipUtils.createArchiveInputStream(ZipUtils.java:172)
	at org.artifactory.util.ZipUtils.extractFiles(ZipUtils.java:150)
	at org.artifactory.util.ZipUtils.extract(ZipUtils.java:93)
	at org.artifactory.util.ZipUtilsTest.extract(ZipUtilsTest.java:110)
	at org.artifactory.util.ZipUtilsTest.testUnsupportedArchive(ZipUtilsTest.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnsupportedArchive -->
        <test-method status="PASS" signature="closeStream()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="closeStream" is-config="true" duration-ms="1" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeStream -->
        <test-method status="PASS" signature="unbindArtifactoryHome()[pri:0, instance:org.artifactory.util.ZipUtilsTest@5bd70cde]" name="unbindArtifactoryHome" is-config="true" duration-ms="0" started-at="2013-05-13T13:11:30Z" finished-at="2013-05-13T13:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unbindArtifactoryHome -->
      </class> <!-- org.artifactory.util.ZipUtilsTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
