#!/usr/bin/env bash

action=$1
version=$2

if [ "$action" == "remove" ]; then
  # It's an un-installation

  CURRENT_USER=`id -nu`
  if [ "$CURRENT_USER" != "root" ]; then
    echo
    echo "ERROR: Please un-install Artifactory using root."
    echo
    exit 1
  fi

  SERVICE_FILE=/etc/init.d/artifactory

  if [ -f $SERVICE_FILE ]; then
    SERVICE_STATUS="`$SERVICE_FILE status`"
    if [[ ! "$SERVICE_STATUS" =~ .*[sS]topped.* ]]; then
      echo "Stopping the artifactory service..."
      $SERVICE_FILE stop || exit $?
    fi
  fi

  echo "Removing the artifactory service from auto-start"
  # /sbin/chkconfig --del artifactory 2>/dev/null

  # Create backups
  echo "Creating a backup of the artifactory home folder in ${BACKUP_DIR}"
  TIMESTAMP=`echo "$(date '+%T')" | tr -d ":"`
  CURRENT_TIME="$(date '+%Y%m%d').$TIMESTAMP"
  BACKUP_DIR="[[target_var_dir]]/artifactory.backup.${CURRENT_TIME}"

  # ignore any failures or the package will be left in an inconsistent state
  mkdir -p "${BACKUP_DIR}" && \
  cp -a [[target_etc_dir]] "${BACKUP_DIR}/etc" && \
  mv [[target_artifactory_home]]/logs "${BACKUP_DIR}/logs" 2>&1 1>/dev/null

  if [ -d "[[target_artifactory_home]]/data" ]; then
    rm -rf "[[target_artifactory_home]]/data/tmp" 2>&1 1>/dev/null
    rm -rf "[[target_artifactory_home]]/data/work" 2>&1 1>/dev/null

    if [ $(stat -c "%d" [[target_artifactory_home]]/data/) -eq $(stat -c "%d" ${BACKUP_DIR}) ]; then
      echo "Backup [[target_artifactory_home]]/data to ${BACKUP_DIR}/data"
      cp -a [[target_artifactory_home]]/data "${BACKUP_DIR}/data" 2>/dev/null
    else
      echo "PLEASE NOTE: Skipped creating a backup of the Artifactory data folder because source and target are not in the same drive [[[target_artifactory_home]]/data, ${BACKUP_DIR}/data/]"
      cp -pr [[target_artifactory_home]]/data ${BACKUP_DIR}/data
    fi
  fi

  if [ -e [[target_tomcat_home]]/lib/mysql-connector-java*.jar ]; then
    echo "MySQL connector found"
    cp [[target_tomcat_home]]/lib/mysql-connector-java* "${BACKUP_DIR}" 2>/dev/null
  fi
  if [ -e [[target_artifactory_home]]/backup ]; then
    mv [[target_artifactory_home]]/backup "${BACKUP_DIR}/backup" 2>/dev/null
  fi
fi

exit 0
