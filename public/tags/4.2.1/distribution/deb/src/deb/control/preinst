#!/usr/bin/env bash

action=$1
version=$2

CURRENT_USER=`id -nu`
if [ "$CURRENT_USER" != "root" ]; then
    echo
    echo "ERROR: Please install Artifactory using root."
    echo
    exit 1
fi

SERVICE_FILE="/etc/init.d/[[artifactory]]"
if [ -e "$SERVICE_FILE" ]; then
    # Checking same layout. If not fails upgrade
    if [ -z "`grep "/etc/opt/jfrog/artifactory/default" "$SERVICE_FILE"`" ]; then
        echo "ERROR: Currently installed Artifactory version does not have the same layout than this DEB!"
        echo "NOTE: To upgrade follow these instructions:"
        echo "NOTE: - Uninstall the previous DEB (dpkg -r artifactory),"
        echo "NOTE: - Then install this one (dpkg -i this_deb),"
        echo "NOTE: - And finally recover from backup (/opt/jfrog/artifactory/bin/recover.backup.sh)"
        exit 1
    fi

    # Shutting down the artifactory service if running
    SERVICE_STATUS="`$SERVICE_FILE status`"
    if [[ ! "$SERVICE_STATUS" =~ .*[sS]topped.* ]]; then
        echo "Stopping the artifactory service..."
        $SERVICE_FILE stop || exit $?
    fi
fi

[ -e /etc/opt/jfrog/artifactory ] && read uid gid <<<$(stat -c '%u %g' /etc/opt/jfrog/artifactory)

echo "Checking if group [[group_name]] exists..."
getent group "[[group_name]]" 2>&1 1>/dev/null
if [ $? != 0  ]; then
  echo "Group [[group_name]] doesn't exist. Creating ..."
  /usr/sbin/groupadd -r [[group_name]] ${gid:+-g} $gid|| exit $?
else
  echo "Group [[group_name]] exists."
fi

echo "Checking if user [[username]] exists..."

getent passwd "[[username]]" 2>&1 1>/dev/null
if [ $? != 0 ]; then
  echo "User [[username]] doesn't exist. Creating ..."
  /usr/sbin/useradd [[username]] -g [[username]] -d [[target_artifactory_home]] ${uid:+-u} $uid || exit $?
else
  echo "User [[username]] exists."
fi

echo "Checking if ARTIFACTORY_HOME exists"
if [ ! -d "[[target_artifactory_home]]" ]; then
  mkdir -p [[target_artifactory_home]]
  chown -R [[username]]: [[target_artifactory_home]] || exit $?
fi

# Cleaning the artifactory webapp and work folder

echo "Removing tomcat work directory"
if [ -d [[target_tomcat_home]]/work ]; then
  rm -rf [[target_tomcat_home]]/work || exit $?
fi

if [ -d [[target_tomcat_home]]/webapps/[[artifactory]] ]; then
  echo "Removing Artifactory's exploded WAR directory"
  rm -rf [[target_tomcat_home]]/webapps/[[artifactory]] || exit $?
fi
exit 0
