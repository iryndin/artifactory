export default {
    'name': 'Name',
    'description': 'Description',
    'artifactsCount': 'Artifact Count',
    'repositoryPath': 'Repository Path',
    'repositoryLayout': 'Repository Layout',
    'repoType': 'Package Type',
    'remoteRepoUrl': 'Remote Repository URL',
    'created': 'Created',
    'deployedBy': 'Deployed by',
    'licenses': 'Licenses',
    'filtered': 'Filtered',
    'downloaded': 'Downloaded',
    'remoteDownloaded': 'Remote Downloaded',
    'moduleID': 'Module ID',
    'size': 'Size',
    'lastModified': 'Last Modified',
    'lastDownloaded': 'Last Downloaded',
    'lastRemoteDownloaded': 'Remote Last Downloaded',
    'compressed': 'Compressed',
    'crc': 'CRC',
    'modificationTime': 'Modification Time',
    'path': 'Path',
    'watchingSince': 'Watching Since',
    'lastDownloadedBy': 'Last Downloaded By',
    'lastRemoteDownloadedBy': 'Remote Last Downloaded By',
    'lastReplicationStatus': 'Last Replication Status',
    'signingKeyLink': 'Signing Key',
    tabs: {
        General: 'General',
        Properties: 'Properties',
        EffectivePermission: 'Effective Permissions',
        Watch: 'Watchers',
        Builds: 'Builds',
        BlackDuck: 'Governance',
        'GeneralXml': 'Xml View',
        'ViewSource': 'View Source',
        'NuPkgInfo': 'NuPkg Info',
        'PomView': 'Pom View',
        'IVYXml': 'Ivy View',
        'RubyGems': 'RubyGems',
        'NpmInfo': 'Npm Info',
        'PyPIInfo': 'PyPI Info',
        'BowerInfo': 'Bower Info',
        'DockerInfo': 'Docker Info',
        'DockerAncestryInfo': 'Docker Ancestry',
        'DockerV2Info': 'Docker Info',
        'Rpm': 'Rpm Info',
        'StashInfo': 'Stash Info'
    },
    nuget: {
        authors: 'Authors',
        owners: 'Owners',
        pkgTitle: 'Title',
        tags: 'Tags',
        version: 'Version',
        requireLicenseAcceptance: 'Require License Acceptance',
        id: 'ID',
        title: 'Title',
        languages: 'Languages',
        releaseNotes: 'Release Notes',
        summary: 'Summary',
        projectUrl: 'Project URL',
        copyright: 'Copyright',
        licenseUrl: 'License URL'

    },
    docker: {
        //Info:
        imageId: 'Image Id',
        parent: 'Parent Id',
        created: 'Created',
        container: 'Container',
        dockerVersion: 'Docker Version',
        author: 'Author',
        architecture: 'Architecture',
        os: 'OS',

        //Config:
        size: 'Size',
        hostname: 'Hostname',
        domainName: 'DomainName',
        user: 'User',
        memory: 'Memory',
        memorySwap: 'MemorySwap',
        cpuShares: 'CpuShares',
        cpuSet: 'CpuSet',
        attachStdin: 'AttachStdin',
        attachStdout: 'AttachStdout',
        attachStderr: 'AttachStderr',
        portSpecs: 'portSpecs',
        exposedPorts: 'exposedPorts',
        tty: 'Tty',
        openStdin: 'OpenStdin',
        stdinOnce: 'StdinOnce',
        env: 'Env',
        cmd: 'Cmd',
        image: 'Image',
        volumes: 'Volumes',
        workingDir: 'WorkingDir',
        entryPoint: 'EntryPoint',
        networkDisabled: 'NetworkDisabled',
        onBuild: 'OnBuild'

    },
    dockerAncestry: {
        size: 'Virtual Size'
    },
    dockerV2: {
        title: 'Title',
        digest: 'Digest',
        ports: 'Ports',
        totalSize: 'Total Size',
        volumes: 'Volumes'
    },
    pyPi: {
        name: 'Name',
        author: 'Author',
        authorEmail : 'Author Email',
        homepage: 'Homepage',
        downloadUrl: 'Download URL',
        platform: 'Platform',
        version: 'Version',
        license: 'License',
        keywords: 'Keywords',
        summary: 'Summary'
    },
    bower: {
        name: 'Name',
        description: 'Description',
        version: 'Version',
        license: 'License',
        keywords: 'Keywords',
        repository: 'Repository'
    },
    rubyGems: {
        authors: 'Authors',
        owners: 'Owners',
        description: 'Description',
        homepage: 'Homepage',
        name: 'Name',
        platform: 'Platform',
        summary: 'Summary',
        repositoryPath: 'Repository Path',
        version: 'Version'

    },
    npm: {
        name: 'Name',
        version: 'Version',
        license: 'License',
        description: 'Description',
        keywords: 'Keywords',
        repository: 'Repository'
    },
    rpm: {
        buildDate: 'Build Date',
        epoch: 'Epoch',
        name: "Name",
        release: "Release",
        size: 'Size',
        summary: "Summary",
        version: "Version",
        buildHost: "Build Host",
        packager: "Packager",
        sourceRpm: "Source Rpm",
        url: "URL",
        vendor: "Vendor"

    },
    governance: {
        name: 'Component Name',
        version: 'Component Version',
        componentId: 'Component ID',
        extComponentId: 'External Component ID',
        homepage: 'Homepage',
        description: 'Description',
        catalogComponent: 'Catalog Component'
    },
    trash: {
        deletedTime: 'Deleted Time',
        deletedBy: 'Deleted By',
        originalRepository: "Original Repository",
        originalRepositoryType: "Original Repository Type",
        originalPath: "Original Path"
    }
}